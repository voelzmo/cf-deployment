#!/bin/bash

set -eux -o pipefail

mydir="$(cd "$(dirname "$0")" && pwd)"
cf_deployment_dir="$(cd "${mydir}/.." && pwd)"

release_dir="$(cd "${mydir}/../outputs/releases" && pwd)"
rm -rf "${release_dir}"
mkdir -p "${release_dir}"

output_dir="$( cd "${mydir}/../outputs/create_release" && pwd)"
rm -rf "${output_dir}"
mkdir -p "${output_dir}"

if [ $# -ne 4 ]; then
  echo "Usage: ${0} aws_stemcell_path bosh_lite_stemcell_path cf_release_path etcd_release_path"
  exit 1
fi

aws_stemcell_path="${1:?}"
bosh_lite_stemcell_path="${2:?}"
cf_release_path="${3:?}"
etcd_release_path="${4:?}"

if [ ! -e "${aws_stemcell_path}" ]; then
  echo "aws_stemcell_path is invalid"
  exit 1
fi

if [ ! -e "${bosh_lite_stemcell_path}" ]; then
  echo "bosh_lite_stemcell_path is invalid"
  exit 1
fi

if [ ! -d "${cf_release_path}" ]; then
  echo "cf_release_path is invalid"
  exit 1
fi

if [ ! -e "${etcd_release_path}" ]; then
  echo "etcd_release_path is invalid"
  exit 1
fi

export BOSH_USE_BUNDLER=true

pushd "${cf_release_path}"
  cf_release_commit=$(git rev-parse HEAD)
popd

etcd_version="$(tar -xOf "${etcd_release_path}" ./release.MF | grep -E '^version:' | grep -o -E "[0-9.]*[0-9]")"
etcd_sha="$(sha1sum "${etcd_release_path}" | awk '{print $1;}')"

stemcell_version() {
  tar -xOf "${1}" stemcell.MF | grep version | head -1 | grep -o -E "[0-9.]*[0-9]"
}

stemcell_name() {
  tar -xOf "${1}" stemcell.MF | grep name | head -1 | awk '{print $2;}'
}

stemcell_sha1() {
  sha1sum "${1}" | awk '{print $1;}'
}

aws_stemcell_version="$(stemcell_version "${aws_stemcell_path}")"
aws_stemcell_name="$(stemcell_name "${aws_stemcell_path}")"
aws_stemcell_sha1="$(stemcell_sha1 "${aws_stemcell_path}")"

bosh_lite_stemcell_version="$(stemcell_version "${bosh_lite_stemcell_path}")"
bosh_lite_stemcell_name="$(stemcell_name "${bosh_lite_stemcell_path}")"
bosh_lite_stemcell_sha1="$(stemcell_sha1 "${bosh_lite_stemcell_path}")"

#prepare-deployments script relies on the `commit` tag for cf.
#Currently prepare deployment uses this information naively by
#calling grep. If you wish to cange this file to have more commits
#then prepare-deployment will need to be updated as well.
cat > "${cf_deployment_dir}/blessed_versions.json" <<EOF
{
  "releases": [
    {
      "name": "cf",
      "commit": "${cf_release_commit}"
    },
    {
      "name": "etcd",
      "version": "${etcd_version}",
      "sha1": "${etcd_sha}",
      "url": "https://bosh.io/d/github.com/cloudfoundry-incubator/etcd-release?v=${etcd_version}"
    }
  ],
  "stemcells": {
    "aws": {
      "type": "${aws_stemcell_name}",
      "version": "${aws_stemcell_version}",
      "url": "https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=${aws_stemcell_version}",
      "sha1": "${aws_stemcell_sha1}"
    },
    "bosh-lite": {
      "type": "${bosh_lite_stemcell_name}",
      "version": "${bosh_lite_stemcell_version}",
      "url": "https://bosh.io/d/stemcells/bosh-warden-boshlite-ubuntu-trusty-go_agent?v=${bosh_lite_stemcell_version}",
      "sha1": "${bosh_lite_stemcell_sha1}"
    }
  }
}
EOF

cat "${cf_deployment_dir}/blessed_versions.json"

git add "${cf_deployment_dir}/blessed_versions.json"
git config user.name "CF MEGA BOT"
git config user.email "cf-mega@pivotal.io"
git commit -m "Update blessing"

